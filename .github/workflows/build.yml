name: Build App
run-name: ${{ inputs.platform }} - ${{ inputs.profile }} - ${{ inputs.should_submit }} - ${{ github.sha }}
on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: Platform to build for
        options:
          - android
          - ios
      profile:
        type: choice
        description: Build profile to use
        options:
          - development
          - preview
          - production
      should_submit:
        type: boolean
        description: Whether to perform the submit step
        required: true
        default: false
env:
  EAS_LOCAL_BUILD_WORKINGDIR: ${{ github.workspace }}/tmp
  EAS_LOCAL_BUILD_SKIP_CLEANUP: 1
jobs:
  build:
    runs-on: ${{ inputs.platform == 'android' && 'ubuntu-latest' || 'macos-latest' }}
    strategy:
      matrix:
        node: [18.x]
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v3

      - name: 🏗 Setup credentials - json (ios)
        uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.EXPO_CREDENTIALS_BASE64 }}
          filename: "credentials.json"

      - name: 🏗 Setup credentials - profile (ios)
        uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.EXPO_IOS_PROFILE_BASE64 }}
          filename: "profile.mobileprovision"
          working-directory: "credentials/ios"

      - name: 🏗 Setup credentials - cert (ios)
        uses: mobiledevops/secret-to-file-action@v1
        with:
          base64-encoded-secret: ${{ secrets.EXPO_IOS_CERT_BASE64 }}
          filename: "dist-cert.p12"
          working-directory: "credentials/ios"

      - name: 🏗 Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: 🏗 Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest
          eas-version: latest
          packager: npm

      - name: 📦 Install dependencies
        run: npm i

      - name: 📦 Build libs
        run: npm run build-libs

      - name: 📦 Install built libs
        run: npm run install-libs

#      - name: 📋 Test project
#        run: yarn test

      - name: 👷 Build app
        run: |
          eas build --local \
            --non-interactive \
            --platform=${{ inputs.platform }} \
            --profile=${{ inputs.profile }}

      - name: Collect logs
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: logs
          path: |
            ${{ env.EAS_LOCAL_BUILD_WORKINGDIR || '/not-found' }}/**/*.log
#           example: /var/folders/0g/hj_q_pzx65bbjnslxz9n0src0000gn/T/eas-build-local-nodejs/f38c9623-76d4-4099-9233-ab4fa5a3dedf

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: |
            ./*.aab
            ./*.apk
            ./*.ipa
            android/app/build/outputs/**/*.aab
            android/app/build/outputs/**/*.apk
            ios/build/*.ipa

      - name: Generate installation link for .ipa/.aab/.apk
        if: ${{ !cancelled() && !failure() }}
        run: |
          export INSTALL_ON_AIR_CSRF_TOKEN=$( curl https://installonair.com --silent | grep -E "^<meta.*name=.*\"csrf-token\".*content=\".*\".*>$" | grep -Po 'content=\"\K[^"]+' )

          echo "INSTALL_ON_AIR_CSRF_TOKEN: $INSTALL_ON_AIR_CSRF_TOKEN"

          export INSTALL_ON_AIR_FILE=$(ls | grep '.*\.[ipa|aab|apk]')

          echo "INSTALL_ON_AIR_FILE: $INSTALL_ON_AIR_FILE"

          curl -X POST -H "Accept: application/json" --silent -v -F ajax=1 -F user_id=0 -F submitBtn= -F _token=$INSTALL_ON_AIR_CSRF_TOKEN -F ipafile=@$INSTALL_ON_AIR_FILE https://fupload.installonair.com/ipafile > response-json.txt
  
          cat response-json.txt
  
          export INSTALL_ON_AIR_RESPONSE_JSON=$(grep -Po '{.*}' response-json.txt)
          
          echo "INSTALL_ON_AIR_RESPONSE_JSON: $INSTALL_ON_AIR_RESPONSE_JSON"

          echo "INSTALL_ON_AIR_RESPONSE_JSON=$INSTALL_ON_AIR_RESPONSE_JSON" >> $GITHUB_ENV

      - name: Installation link for .ipa/.aab/.apk (https://installonair.com)
        if: ${{ !cancelled() && !failure() && inputs.platform == 'ios' }}
        run: |
          echo '### Hello world! 🚀' >> $GITHUB_STEP_SUMMARY
          echo '```json\n${{ toJson(fromJson(env.INSTALL_ON_AIR_RESPONSE_JSON)) }}```' >> $GITHUB_STEP_SUMMARY

#      - name: 🚢 Submit
#        if: ${{ inputs.should_submit }}
#        run: eas submit -p ${{ inputs.platform }} --profile ${{ inputs.profile }} --path app-build
